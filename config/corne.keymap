/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
        };

        lparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        rparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
        };

        QM {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <7 8>;
        };

        DQM {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <8 9>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <3 1>;
        };

        BS {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <1 2>;
        };
    };

    behaviors {
        hold_tap_behavior: hold_tap_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // | A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // | Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | BKSP |

            bindings = <
&none  &kp Q                            &kp W                          &kp E                              &kp R                            &kp T           &kp Y        &kp U                             &kp I                               &kp O                           &kp P                                 &none
&none  &hold_tap_behavior LCTRL A       &hold_tap_behavior LEFT_ALT S  &hold_tap_behavior LEFT_COMMAND D  &hold_tap_behavior LEFT_SHIFT F  &lt 6 G         &lt 6 H      &hold_tap_behavior RIGHT_SHIFT J  &hold_tap_behavior RIGHT_COMMAND K  &hold_tap_behavior RIGHT_ALT L  &hold_tap_behavior RCTRL SEMICOLON    &none
&none  &hold_tap_behavior LEFT_SHIFT Z  &kp X                          &kp C                              &kp V                            &kp B           &kp N        &kp M                             &kp COMMA                           &kp DOT                         &hold_tap_behavior RIGHT_SHIFT SLASH  &none
                                                                       &kp GRAVE                          &lt 3 TAB                        &lt 5 RETURN    &lt 4 SPACE  &lt 1 BACKSPACE                   &lt 2 DELETE
            >;
        };

        number_layer {
            bindings = <
&none  &kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4    &kp N5    &kp NUMBER_6  &kp N7     &kp N8     &kp N9      &kp NUMBER_0    &none
&none  &kp LCTRL       &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &none     &none         &kp EQUAL  &kp PLUS   &kp MINUS   &kp UNDERSCORE  &none
&none  &kp LEFT_SHIFT  &none         &none             &none           &none     &none         &none      &kp COMMA  &kp PERIOD  &kp SLASH       &none
                                     &none             &none           &none     &none         &none      &none
            >;
        };

        symbol_layer {
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN      &kp HASH          &kp DOLLAR         &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &kp LCTRL        &kp LALT         &kp LGUI          &kp LSHFT          &none          &none      &kp PIPE       &kp BACKSLASH     &none                 &none                  &none
&none  &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &none          &none      &kp LESS_THAN  &kp GREATER_THAN  &none                 &none                  &none
                                         &none             &none              &none          &none      &none          &none
            >;
        };

        navigation_layer {
            bindings = <
&none  &none           &none         &none             &none           &none    &none     &none          &none         &none      &none  &none
&none  &kp LCTRL       &kp LEFT_ALT  &kp LEFT_COMMAND  &kp LEFT_SHIFT  &none    &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &none  &none
&none  &kp LEFT_SHIFT  &none         &none             &none           &none    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &none  &none
                                     &none             &none           &none    &trans    &none          &none
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        system_layer {
            bindings = <
&none  &none  &bt BT_SEL 0      &bt BT_SEL 1            &bt BT_SEL 2        &none    &none  &none            &none              &none          &none      &none
&none  &none  &kp K_MUTE        &kp C_VOLUME_DOWN       &kp C_VOLUME_UP     &none    &none  &kp RIGHT_SHIFT  &kp RIGHT_COMMAND  &kp RIGHT_ALT  &kp RCTRL  &none
&none  &none  &kp C_PLAY_PAUSE  &kp C_AL_PREVIOUS_TASK  &kp C_AL_NEXT_TASK  &none    &none  &none            &none              &none          &none      &none
                                &none                   &none               &none    &none  &none            &trans
            >;
        };

        long_layer {
            bindings = <
&none  &kp Q  &kp W  &kp E       &kp R      &kp T      &kp Y       &kp U          &kp I       &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D       &kp F      &kp G      &kp H       &kp J          &kp K       &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C       &kp V      &kp B      &kp N       &kp M          &kp COMMA   &kp DOT  &none     &none
                     &kp ESCAPE  &kp SPACE  &kp TAB    &kp RETURN  &kp BACKSPACE  &kp DELETE
            >;
        };
    };
};
